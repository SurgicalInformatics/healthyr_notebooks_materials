---
title: "Your first R Notebook"
format:
  pdf: default
  html: default
---

In this session, we will create five beautiful and colourful barplots in less than an hour.

* By the end of this session, you will:
    + know what an R Notebook looks like,
    + know where data lives in R  (in the Environment tab),
    + know that normal text has a white background, whereas R code lives in the grey areas ("code chunks").
    
**Details of the R code you see in this session will be covered later, the purpose of this session is to gain familiarity with the RStudio interface.**


# Loading data (Exercise 1)

If your cursor is in a code chunk (in the grey area), you can use these keyboard shortcuts:

* Run a line with Ctrl+Enter OR Command+Enter
* Run all lines in a code chunk with Ctrl+Shift+Enter OR Command+Shift+Enter


1. Practice these keyboard shortcuts on the code chunk below.
2. You will know that they worked if Data objects (`mydata` and `mydata2013` appear in the Environment tab). Find the Environment tab. If it seems collapsed, click on it to reveal.
3. Click on `mydata` and investigate it in the new tab that opens up next to `01_introduction.qmd`. What's the difference between `mydata` and `mydata2013`?
4. Get `mydata2013` printed in your notebook by typing it on the empty line right after the `source(here::here("initialise_healthyr.R"))` line. Remember: Control+Enter to run and for it to show.

```{r}
# Run the source line (Control+Enter or Command+Enter) and check the Environment tab
source(here::here("initialise_healthyr.R"))

```

# Your first R plot (Exercise 2)

After loading some data, you are ready to make your first R plot by running the code below. We recommend Ctrl+Shift+Enter but you can also use the little green triangle at the top-right corner.

```{r}
# Exercise 2 - run this code (Ctrl+Shift+Enter)
mydata %>% 
  ggplot(aes(x      = year,
             y      = deaths_millions,
             fill   = cause,
             colour = cause)) +
    geom_col()

```

`ggplot()` stands for **grammar of graphics plot** - a user friendly yet flexible alternative to `plot()`.

`aes()` stands for **aesthetics** - things we can see.

`geom_()` stands for **geometric**.


## Question

Looking at your R code in Exercise 2, why are there two closing brackets - `))` - after the word `cause`?

# Changing variables included on a plot (Exercise 3)

Plot the number of deaths in Developed and Developing countries for the year 2013:

1. Copy the R code from Exercise 2 into the empty grey box here.

2. Change `mydata` to `mydata2013`.

3. Change the x variable from `year` to `location`.

```{r}
# Exercise 3 - your R code:



```


# Comparing bars of different height (Exercise 4)

1. Copy your R code from Exercise 3.
2. Add `position="fill"` to the `geom_col()` brackets.

```{r}
# Exercise 4 - your R code:



```

# Plot each bar next to each other (Exercise 5)

1. Copy your R code from Exercise 4.
2. Change the word "fill" to "dodge".

`position="dodge"` puts the different causes next to each rather (the default is `position="stack"`, meaning if you don't include a position, it will be "stack").

```{r}
# Exercise 5 - your R code:



```

# Facets - multiple plots in one go (Exercise 6)

Going back to the tibble `mydata` with all years (copy the R code from Exercise 2), change the x variable from `year` to `location` and add `+ facet_wrap(~year)` to plot all years at once. (A *tibble* is what we call tables that have been loaded to R - so they show up in the Environment tab.)


```{r}
# Exercise 6 - your R code:



```
# Exercise solutions


## Solution 3

```{r}
mydata2013 %>% 
  ggplot(aes(x      = location,
             y      = deaths_millions,
             fill   = cause,
             colour = cause)) +
  geom_col()

```

## Solution 4


```{r}
mydata2013 %>% 
  ggplot(aes(x      = location,
             y      = deaths_millions,
             fill   = cause,
             colour = cause)) +
  geom_col(position = "fill")

```

## Solution 5

```{r}
mydata2013 %>% 
  ggplot(aes(x      = location,
             y      = deaths_millions,
             fill   = cause,
             colour = cause)) +
  geom_col(position = "dodge")

```

## Solution 6

```{r, fig.width = 8, fig.height=4}
mydata %>% 
  ggplot(aes(x      = location,
             y      = deaths_millions,
             fill   = cause,
             colour = cause)) +
  geom_col() +
  facet_wrap(~year)

```



